library(gridExtra)
library(Matrix)
library(tidyverse)
dataset = data.frame(anime[c(-2)])
sum( is.na( dataset)) #[count no. of missing values]
dataset = na.omit(dataset)
glimpse(dataset)
# Visualize the relationship between the Episodes and Rating
gs <- ggplot( dataset ,aes(y = log(dataset$episodes) ,x = dataset$rating,color =rating, fill = rating)) # SETUP
gl <- gs + geom_count()+geom_smooth() # Adding Scatterplot
glb <- gl + labs(title ='ANIME ', y='LOGARITHM OF EPISODES', x='RATING');glb # Labeling
# Correlation
ggcorrplot(cor(dataset[c(-2,-3)]),method = 'circle',hc.order = T,
type ='lower',colors = c('darkred','grey','cyan'),title = "CORRELATION MATRIX") #plotting
# *****ANIME TYPE  ANALYSIS*****
# Visualize the relationship between the Type and Episode
gs <- ggplot( dataset ,aes(x = dataset$type ,y = log(dataset$episodes),color =type, fill = type)) # SETUP
gl <- gs + geom_bar(stat = "identity") # Adding Barplot
glb <- gl + labs(title ='ANIME ', x='TYPE', y='LOGARITHM OF EPISODES');glb # Labeling
install.packages(c("arules", "assertive.code", "assertive.data", "assertive.data.uk", "assertive.data.us", "assertive.matrices", "assertive.models", "broom", "car", "carData", "chron", "cli", "data.table", "digest", "doParallel", "dplyr", "evaluate", "fansi", "gbm", "ggcorrplot", "ggplot2", "googleVis", "haven", "htmlwidgets", "jomo", "jsonlite", "later", "lme4", "maptools", "markdown", "mime", "nloptr", "NLP", "openssl", "plotrix", "processx", "ps", "R6", "raster", "Rcpp", "RcppEigen", "readr", "reprex", "rio", "rlang", "rmarkdown", "rpart.plot", "rstudioapi", "shiny", "stringi", "testthat", "tidyr", "tidyselect", "tinytex", "TTR", "webshot", "xfun", "xtable", "xts", "zoo"))
install.packages(c("foreign", "lattice", "MASS", "Matrix", "mgcv", "survival"), lib="C:/Program Files/R/R-3.5.1/library")
install.packages(c("jsonlite", "markdown"))
# suppressPackageStartupMessages(library(PACKAGE))
# To supress package messages
if(!"ggplot2" %in% rownames(installed.packages())){install.packages("ggplot2")}
suppressPackageStartupMessages(library(ggplot2))
if(!"plotly" %in% rownames(installed.packages())){install.packages("plotly")}
suppressPackageStartupMessages(library(plotly))
if(!"dplyr" %in% rownames(installed.packages())){install.packages("dplyr")}
suppressPackageStartupMessages(library(dplyr))
if(!"plotly" %in% rownames(installed.packages())){install.packages("plotly")}
suppressPackageStartupMessages(library(MASS))
if(!"MASS" %in% rownames(installed.packages())){install.packages("MASS")}
if(!"ggcorrplot" %in% rownames(installed.packages())){install.packages("ggcorrplot")}
suppressPackageStartupMessages(library(ggcorrplot))
scatter.smooth(x =Boston$lstat, y = Boston$medv ,col ='steel blue'
,pch = 20)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(MASS)
scatter.smooth(x =Boston$lstat, y = Boston$medv ,col ='steel blue'
,pch = 20)
scatter.smooth(x =Boston$lstat, y = Boston$medv ,col ='steel blue'
a -> c(12,2,33,3)
a <- c(12,2,33,3)
is.vector(a)
as.data.frame.list(a)
a
a[2]
length(a)
library(readr)
anime <- read_csv("C:/LOCAL_R/Rishabh##/Machine Learning/data SET/anime-recommendations-database/anime.csv",
col_types = cols(anime_id = col_integer(),
episodes = col_integer(), members = col_integer(),
rating = col_double(), type = col_factor(levels = c())))
View(anime)
knitr::opts_chunk$set(echo = TRUE)
dataset = data.frame(anime[c(-2)])
sum( is.na( dataset))
dataset = na.omit(dataset)
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(ggcorrplot))
suppressPackageStartupMessages(library(dplyr))
library(splitstackshape)
library(gridExtra)
library(Matrix)
library(tidyverse)
dataset = data.frame(anime[c(-2)])
sum( is.na( dataset)) #[count no. of missing values]
dataset = na.omit(dataset)
glimpse(dataset)
gs <- ggplot( dataset ,aes(y = log(dataset$episodes) ,x = dataset$rating,color =rating, fill = rating)) # SETUP
gl <- gs + geom_count()+geom_smooth() # Adding Scatterplot
glb <- gl + labs(title ='ANIME ', y='LOGARITHM OF EPISODES', x='RATING');glb # Labeling
ggcorrplot(cor(dataset[c(-2,-3)]),method = 'circle',hc.order = T,
type ='lower',colors = c('darkred','grey','cyan'),title = "CORRELATION MATRIX") #plotting
gs <- ggplot( dataset ,aes(x = dataset$type ,y = log(dataset$episodes),color =type, fill = type)) # SETUP
gl <- gs + geom_bar(stat = "identity") # Adding Barplot
glb <- gl + labs(title ='ANIME ', x='TYPE', y='LOGARITHM OF EPISODES');glb # Labeling
library(tidyverse)
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy, size = class))
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy, alpha = class))
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy, shape = class))
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy), color = class)
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy), color = "blue")
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy), color = "pink")
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy), color = "blue4")
ggplot2 :: mpg
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,stroke = class)) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ)) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
# ploting displ[engine size] vs hwy[ fuel efficiency]
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 5)) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
# ploting displ[engine size] vs hwy[ fuel efficiency]
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6)) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class)) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6)) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6), size = 4) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
# ploting displ[engine size] vs hwy[ fuel efficiency]
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6 && hwy < 30), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6 || hwy < 30), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6 || hwy > 30), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6 && hwy > 30), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6 ), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = f1 ), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
# ploting displ[engine size] vs hwy[ fuel efficiency]
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = fl ), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = drv ), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color =  ), size = 3) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = className() ), size = 3) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = className() ), size = 3) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 3) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_wrap( ~ class, nrow = 3 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_wrap( ~ class, nrow = 4 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( y = displ, x = hwy,color = class ), size = 2) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_wrap( ~ class, nrow = 2 )
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_grid( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = drv, y = cyl,color = class ), size = 2) +
ggplot( data = mpg) +
geom_point( mapping = aes( x = drv, y = cyl,color = class ), size = 2)
ggplot( data = mpg) +
geom_point( mapping = aes( x = drv, y = cyl,color = class ), size = 2)
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_grid( ~ class, nrow = 2, margin = TRUE )
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_grid( ~ class, margin = TRUE )
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_grid( ~ class, margin = "am" )
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_grid( ~ class, margin = "vs" )
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_grid( ~ class, nrow = 2, margin = "am" )
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
geom_smooth( mapping = aes( x = displ, y = hwy ), se = FALSE)
library(tidyverse)
ggplot( data = diamonds) +
stats_summary(
mapping = aes( x=cut, y=depth ),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot( data = diamonds) +
stat_summary(
mapping = aes( x=cut, y=depth ),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot( data = diamonds, color = "blue4") +
stat_summary(
mapping = aes( x=cut, y=depth ),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
library(tidyverse)
ggplot( data = diamonds, color = "blue4") +
geom_col( mapping = aes( x=cut, y=depth)
q
ggplot( data = diamonds, color = "blue4") +
geom_col( mapping = aes( x=cut, y=depth)
)
ggplot( data = diamonds, color = "blue4") +
geom_bar( mapping = aes( x=cut, y=depth)
q
ggplot( data = diamonds, color = "blue4") +
geom_bar( mapping = aes( x=cut, y=depth))
ggplot( data = diamonds, color = "blue4") +
geom_bar( mapping = aes( x=cut, y=depth), stat = "identity")
ggplot( data = diamonds, color = "blue4") +
geom_bar( mapping = aes( x=cut, color = cut))
ggplot( data = diamonds, color = "blue4") +
geom_bar( mapping = aes( x=cut, fill = cut))
ggplot( data = diamonds, color = "blue4") +
geom_bar( mapping = aes( x=cut, fill = clarity))
ggplot( data = diamonds,mapping = aes( x=cut, fill = clarity)) +
geom_bar( alpha = 1/5, position = "identity")
ggplot( data = diamonds,mapping = aes( x=cut, fill = NA)) +
geom_bar( alpha = 1/5, position = "identity")
ggplot( data = diamonds,mapping = aes( x=cut, color = "clarity")) +
geom_bar( fill = NA, position = "identity")
ggplot( data = diamonds,mapping = aes( x=cut, color = "clarity")) +
geom_bar( position = "identity")
ggplot( data = diamonds,mapping = aes( x=cut, color = "clarity")) +
geom_bar( position = "fill")
ggplot( data = diamonds,mapping = aes( x=cut, color = "clarity")) +
geom_bar( position = "dodge")
ggplot( data = diamonds, mapping = aes( x=cut, fill = clarity )) +
geom_bar( position = "dodge")
library(tidyverse)
# Importing dataset
View(nycflights13)
ggplot( data = diamonds ) +
geom_bin2d( mapping = aes( x = carat, y= price ))
ggplot( data = diamonds ) +
geom_bin2d( mapping = aes( x = carat, y= price ))
vignette("tibble")
tibble( ~x,~y,~z
#________
'a',2,2
'b',3,3
)
tibble( ~x,~y,~z
#________
'a',2,2
'b',3,3?)
tibble( ~x,~y,~z
#________
'a',2,2
'b',3,3)
tibble( ~x,~y,~z
#________
'a',2,2
'b',3,3)
tibble( ~x,~y,~z,
#________
'a',2,2,
'b',3,3)
tibble( ~x,~y,~z,
#________
'a',2,2,
'b',3,3
)
tibble( ~x,~y,~z,
#________
'a',2,2,
'b',3,3
)
tribble( ~x,~y,~z,
#________
'a',2,2,
'b',3,3
)
tribble( ~x,~y,~z,
#________
'a',2,2,
'b',3,3
)
tribble( ~x,~y,~z,
#________
'a',1:10,2,
'b',3,3
)
tribble( ~x,~y,~z,
#________
'a',1:10,2,
'b',3,3
)
load("C:/Users/RISHABH/Desktop/BIG MArt/.RData")
install.packages(c("backports", "callr", "class", "htmlTable", "httpuv", "httr", "jsonlite", "knitr", "markdown", "pillar", "ps", "quantreg", "readr", "readxl", "slam", "tibble", "tm"))
install.packages(c("class", "codetools"), lib="C:/Program Files/R/R-3.5.1/library")
install.packages(c("backports", "callr", "class", "htmlTable", "httpuv", "httr", "jsonlite", "knitr", "markdown", "pillar", "ps", "quantreg", "readr", "readxl", "slam", "tibble", "tm"))
install.packages(c("backports", "callr", "class", "htmlTable", "httpuv", "httr", "jsonlite", "knitr", "markdown", "pillar", "ps", "quantreg", "readr", "readxl", "slam", "tibble", "tm"))
install.packages(c("backports", "callr", "class", "htmlTable", "httpuv", "httr", "jsonlite", "knitr", "markdown", "pillar", "ps", "quantreg", "readr", "readxl", "slam", "tibble", "tm"))
install.packages(c("backports", "callr", "class", "htmlTable", "httpuv", "httr", "jsonlite", "knitr", "markdown", "pillar", "ps", "quantreg", "readr", "readxl", "slam", "tibble", "tm"))
setwd("C:/Users/RISHABH/Desktop/BIG MArt")
load("C:/Users/RISHABH/Desktop/BIG MArt/.RData")
sum(is.na(dataset))
dataset = mice::complete(imputed_data,2)
sum(is.na(dataset))
dataset = mice::complete(imputed_data,2)
dataset = mice::complete(imputed_data,2)
sum(is.na(dataset))
Train <- read_csv("Train.csv")
Test <- read_csv("Test.csv")
dataset = dplyr::bind_rows(Train,Test)
setwd("C:/Users/RISHABH/Desktop/BIG MArt")
Train <- read_csv("Train.csv")
Test <- read_csv("Test.csv")
dataset = dplyr::bind_rows(Train,Test)
Train <- read_csv("Train.csv")
# Pakages Required
library(tidyverse)
library(readr)
library(ggcorrplot)
library(gridExtra)
library(randomForest)
library(caret)
Train <- read_csv("Train.csv")
Test <- read_csv("Test.csv")
dataset = dplyr::bind_rows(Train,Test)
####################################################################
dataset$Item_Fat_Content <- factor( dataset$Item_Fat_Content)
dataset$Outlet_Location_Type <- factor( dataset$Outlet_Location_Type)
dataset$Outlet_Size <- factor( dataset$Outlet_Size)
dataset$Outlet_Type <- factor( dataset$Outlet_Type)
dataset$Item_Type <- factor( dataset$Item_Type)
library(mice)
imputed_data <- mice(dataset[,-c(12)], m =2, maxit = 50,method = 'pmm')
dataset = mice::complete(imputed_data,2)
sum( is.na( dataset ))
levels(dataset$Item_Fat_Content)
dataset$Item_Fat_Content <- as.character(dataset$Item_Fat_Content)
library(data.table)
data_dt <- data.table(dataset) %>% .[ Item_Fat_Content %in% c("LF","low fat"),Item_Fat_Content := "Low Fat" ]
# Base Method
# dataset$Item_Fat_Content[ dataset$Item_Fat_Content == "LF" & dataset$Item_Fat_Content == "low fat"] <- "Low Fat"
data_dt <- data_dt %>% .[ Item_Fat_Content == "reg",Item_Fat_Content := "Regular" ]
# Convert into dataframe
dataset = data.frame(data_dt)
# Into factor
dataset$Item_Fat_Content <- factor( dataset$Item_Fat_Content)
levels(dataset$Item_Fat_Content)
class(dataset)
class(dataset$Item_Identifier)
dataset$Item_Identifier[1]
dataset$Item_Identifier[1][:2]
substr(dataset$Item_Identifier[1],1,3)
substr(dataset$Item_Identifier[1],1,2)
dataset %>% select(Item_Identifier) %>% filter(Item_Identifier,1,2) == "FD")
install.packages("stringr")
library(Stringr)
library(stringr)
dataset %>% select(Item_Identifier) %>% filter(str_view(Item_Identifier, "FD"))
library(tidyverse)
library(readr)
library(ggcorrplot)
library(gridExtra)
library(randomForest)
library(caret)
dataset %>% select(Item_Identifier) %>% filter(str_view(Item_Identifier, "FD"))
str_view(Item_Identifier, "FD")
w1 = dataset %>% select(Item_Identifier) %>% filter(str_view(Item_Identifier, "^FD"))
w1 = dataset %>% select(Item_Identifier) %>% str_view(Item_Identifier, "^FD")
w1 = dataset %>% select(Item_Identifier) %>% str_view(dataset$Item_Identifier, "^FD")
dataset$Item_Identifier <- rownames(dataset)
w1 = datasetr%>% filter(str_detect(Item_Identifier, "^FD"))
w1 = dataset%>% filter(str_detect(Item_Identifier, "^FD"))
w1
w1 = dataset$Item_Identifier%>% filter(str_detect(Item_Identifier, "^FD"))
w1 = dataset %>% filter(str_detect(Item_Identifier, "FD"))
w1
w1 = dataset %>% filter(str_detect(Item_Identifier, '^FD'))
w1 = dataset %>% filter(str_detect(dataset$Item_Identifier, '^FD'))
dataset %>% filter(str_detect(Item_Identifier, '^FD'))
str(dataset)
View(data_dt)
Train <- read_csv("Train.csv")
Test <- read_csv("Test.csv")
dataset = dplyr::bind_rows(Train,Test)
dataset$Item_Fat_Content <- factor( dataset$Item_Fat_Content)
dataset$Outlet_Location_Type <- factor( dataset$Outlet_Location_Type)
dataset$Outlet_Size <- factor( dataset$Outlet_Size)
dataset$Outlet_Type <- factor( dataset$Outlet_Type)
dataset$Item_Type <- factor( dataset$Item_Type)
levels(dataset$Item_Type)
sum( is.na( dataset )) #[count no. of missing value
library(VIM)
mice_plot <- aggr( dataset[,-c(12)], color = c('blue4','green4'),
numbers = TRUE, sortVars = TRUE,
labels = names(dataset[,-c(1,7,12)]), cex.axis = .7,
gap = 1, ylab = c("Missing Data","Pattern"))
library(mice)
imputed_data <- mice(dataset[,-c(12)], m =2, maxit = 50,method = 'pmm')
levels(dataset$Item_Fat_Content)
dataset$Item_Fat_Content <- as.character(dataset$Item_Fat_Content)
library(data.table)
# replace LF,low fat,reg with Low Fat & Regular
data_dt <- data.table(dataset) %>% .[ Item_Fat_Content %in% c("LF","low fat"),Item_Fat_Content := "Low Fat" ]
# Base Method
# dataset$Item_Fat_Content[ dataset$Item_Fat_Content == "LF" & dataset$Item_Fat_Content == "low fat"] <- "Low Fat"
data_dt <- data_dt %>% .[ Item_Fat_Content == "reg",Item_Fat_Content := "Regular" ]
# Convert into dataframe
dataset = data.frame(data_dt)
# Into factor
dataset$Item_Fat_Content <- factor( dataset$Item_Fat_Content)
dataset %>% filter(str_detect(Item_Identifier, '^FD'))
dataset %>% filter(str_detect(Item_Identifier, '^FD')) %>% count(count = n())
dataset %>% filter(str_detect(Item_Identifier, '^FD')) %>% count(count = n())
dataset %>% filter(str_detect(Item_Identifier, '^DR')) %>% count(count = n())
dataset %>% filter(str_detect(Item_Identifier, '^NC')) %>% count(count = n())
dataset = mice::complete(imputed_data,2)
sum( is.na( dataset )) #[count no. of missing value
levels(dataset$Item_Fat_Content) # check levels
dataset$Item_Fat_Content <- as.character(dataset$Item_Fat_Content)
library(data.table)
# replace LF,low fat,reg with Low Fat & Regular
data_dt <- data.table(dataset) %>% .[ Item_Fat_Content %in% c("LF","low fat"),Item_Fat_Content := "Low Fat" ]
# Base Method
# dataset$Item_Fat_Content[ dataset$Item_Fat_Content == "LF" & dataset$Item_Fat_Content == "low fat"] <- "Low Fat"
data_dt <- data_dt %>% .[ Item_Fat_Content == "reg",Item_Fat_Content := "Regular" ]
# Convert into dataframe
dataset = data.frame(data_dt)
# Into factor
dataset$Item_Fat_Content <- factor( dataset$Item_Fat_Content)
levels(dataset$Item_Fat_Content)
dataset %>% filter(str_detect(Item_Identifier, '^FD')) %>% mutate(Item_Type_Combined = "Food")
d1 = dataset %>% filter(str_detect(Item_Identifier, '^FD')) %>% mutate(Item_Type_Combined = "Food")
View(d1)
d1 = dataset %>% filter(str_detect(Item_Identifier, '^FD')) %>% mutate(Item_Type_Combined = "Food")
d2 = dataset %>% filter(str_detect(Item_Identifier, '^NC')) %>% mutate(Item_Type_Combined = "Non Consumable")
d3 = dataset %>% filter(str_detect(Item_Identifier, '^DR')) %>% mutate(Item_Type_Combined = "Drinks")
bind_rows(d1,d2,d2)
d4 = bind_rows(d1,d2,d2)
remove(d1,d2,d3,d4)
d1 = dataset %>% filter(str_detect(Item_Identifier, '^FD')) %>% mutate(Item_Type_Combined = "Food")
d2 = dataset %>% filter(str_detect(Item_Identifier, '^NC')) %>% mutate(Item_Type_Combined = "Non Consumable")
d3 = dataset %>% filter(str_detect(Item_Identifier, '^DR')) %>% mutate(Item_Type_Combined = "Drinks")
d4 = bind_rows(d1,d2,d2)
View(d4)
d4 = bind_rows(d1,d2,d3)
i1 = dataset %>% filter( Item_Visibility == 0.0 ) %>% count(n())
i1
i1 = dataset %>% filter( Item_Visibility == 0 ) %>% count(n())
i1
mean(dataset$Item_Visibility)
summary(dataset$Item_Visibility)
View(i1)
i1 = d4 %>% filter( Item_Visibility == 0.0 )
View(i1)
class(dataset$Item_Visibility)
i1 = d4 %>% filter( Item_Visibility == 0.00000000 ) %>% count(n())
i1
i1 = d4 %>% filter( Item_Visibility == 0 ) %>% mutate( Item_Visibility == mean(dataset$Item_Visibility))
View(i1)
i1 = d4 %>% filter( Item_Visibility == 0 ) %>% mutate( Item_Visibility = mean(dataset$Item_Visibility))
View(i1)
i1 = d4 %>% mutate(Item_Visibility = replace(Item_Visibility, which( Item_Visibility == 0.0),mean(dataset$Item_Visibility)))
summary(i1$Item_Visibility)
View(i1)
i1 = dataset %>% filter( Item_Visibility == 0.0 ) %>% count(n())
i1
dataset = i1
View(dataset)
i1 = d4 %>% mutate(Item_Visibility = replace(Item_Visibility, which( Item_Visibility == 0.0),mean(dataset$Item_Visibility)))
View(i1)
