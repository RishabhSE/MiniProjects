suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(ggcorrplot))
suppressPackageStartupMessages(library(dplyr))
library(splitstackshape)
library(gridExtra)
library(Matrix)
library(tidyverse)
dataset = data.frame(anime[c(-2)])
sum( is.na( dataset)) #[count no. of missing values]
dataset = na.omit(dataset)
library(readr)
anime <- read_csv("C:/LOCAL_R/Rishabh##/Machine Learning/data SET/anime-recommendations-database/anime.csv",
col_types = cols(anime_id = col_number(),
episodes = col_number(), members = col_number(),
rating = col_number(), type = col_factor(levels = c())))
View(anime)
#*****************************************************************
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(ggcorrplot))
suppressPackageStartupMessages(library(dplyr))
library(splitstackshape)
library(gridExtra)
library(Matrix)
library(tidyverse)
dataset = data.frame(anime[c(-2)])
sum( is.na( dataset)) #[count no. of missing values]
dataset = na.omit(dataset)
glimpse(dataset)
# Visualize the relationship between the Episodes and Rating
gs <- ggplot( dataset ,aes(y = log(dataset$episodes) ,x = dataset$rating,color =rating, fill = rating)) # SETUP
gl <- gs + geom_count()+geom_smooth() # Adding Scatterplot
glb <- gl + labs(title ='ANIME ', y='LOGARITHM OF EPISODES', x='RATING');glb # Labeling
# Correlation
ggcorrplot(cor(dataset[c(-2,-3)]),method = 'circle',hc.order = T,
type ='lower',colors = c('darkred','grey','cyan'),title = "CORRELATION MATRIX") #plotting
# *****ANIME TYPE  ANALYSIS*****
# Visualize the relationship between the Type and Episode
gs <- ggplot( dataset ,aes(x = dataset$type ,y = log(dataset$episodes),color =type, fill = type)) # SETUP
gl <- gs + geom_bar(stat = "identity") # Adding Barplot
glb <- gl + labs(title ='ANIME ', x='TYPE', y='LOGARITHM OF EPISODES');glb # Labeling
install.packages(c("arules", "assertive.code", "assertive.data", "assertive.data.uk", "assertive.data.us", "assertive.matrices", "assertive.models", "broom", "car", "carData", "chron", "cli", "data.table", "digest", "doParallel", "dplyr", "evaluate", "fansi", "gbm", "ggcorrplot", "ggplot2", "googleVis", "haven", "htmlwidgets", "jomo", "jsonlite", "later", "lme4", "maptools", "markdown", "mime", "nloptr", "NLP", "openssl", "plotrix", "processx", "ps", "R6", "raster", "Rcpp", "RcppEigen", "readr", "reprex", "rio", "rlang", "rmarkdown", "rpart.plot", "rstudioapi", "shiny", "stringi", "testthat", "tidyr", "tidyselect", "tinytex", "TTR", "webshot", "xfun", "xtable", "xts", "zoo"))
install.packages(c("foreign", "lattice", "MASS", "Matrix", "mgcv", "survival"), lib="C:/Program Files/R/R-3.5.1/library")
install.packages(c("jsonlite", "markdown"))
# suppressPackageStartupMessages(library(PACKAGE))
# To supress package messages
if(!"ggplot2" %in% rownames(installed.packages())){install.packages("ggplot2")}
suppressPackageStartupMessages(library(ggplot2))
if(!"plotly" %in% rownames(installed.packages())){install.packages("plotly")}
suppressPackageStartupMessages(library(plotly))
if(!"dplyr" %in% rownames(installed.packages())){install.packages("dplyr")}
suppressPackageStartupMessages(library(dplyr))
if(!"plotly" %in% rownames(installed.packages())){install.packages("plotly")}
suppressPackageStartupMessages(library(MASS))
if(!"MASS" %in% rownames(installed.packages())){install.packages("MASS")}
if(!"ggcorrplot" %in% rownames(installed.packages())){install.packages("ggcorrplot")}
suppressPackageStartupMessages(library(ggcorrplot))
scatter.smooth(x =Boston$lstat, y = Boston$medv ,col ='steel blue'
,pch = 20)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(MASS)
scatter.smooth(x =Boston$lstat, y = Boston$medv ,col ='steel blue'
,pch = 20)
scatter.smooth(x =Boston$lstat, y = Boston$medv ,col ='steel blue'
a -> c(12,2,33,3)
a <- c(12,2,33,3)
is.vector(a)
as.data.frame.list(a)
a
a[2]
length(a)
library(readr)
anime <- read_csv("C:/LOCAL_R/Rishabh##/Machine Learning/data SET/anime-recommendations-database/anime.csv",
col_types = cols(anime_id = col_integer(),
episodes = col_integer(), members = col_integer(),
rating = col_double(), type = col_factor(levels = c())))
View(anime)
knitr::opts_chunk$set(echo = TRUE)
dataset = data.frame(anime[c(-2)])
sum( is.na( dataset))
dataset = na.omit(dataset)
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(ggcorrplot))
suppressPackageStartupMessages(library(dplyr))
library(splitstackshape)
library(gridExtra)
library(Matrix)
library(tidyverse)
dataset = data.frame(anime[c(-2)])
sum( is.na( dataset)) #[count no. of missing values]
dataset = na.omit(dataset)
glimpse(dataset)
gs <- ggplot( dataset ,aes(y = log(dataset$episodes) ,x = dataset$rating,color =rating, fill = rating)) # SETUP
gl <- gs + geom_count()+geom_smooth() # Adding Scatterplot
glb <- gl + labs(title ='ANIME ', y='LOGARITHM OF EPISODES', x='RATING');glb # Labeling
ggcorrplot(cor(dataset[c(-2,-3)]),method = 'circle',hc.order = T,
type ='lower',colors = c('darkred','grey','cyan'),title = "CORRELATION MATRIX") #plotting
gs <- ggplot( dataset ,aes(x = dataset$type ,y = log(dataset$episodes),color =type, fill = type)) # SETUP
gl <- gs + geom_bar(stat = "identity") # Adding Barplot
glb <- gl + labs(title ='ANIME ', x='TYPE', y='LOGARITHM OF EPISODES');glb # Labeling
library(tidyverse)
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy, size = class))
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy, alpha = class))
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy, shape = class))
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy), color = class)
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy), color = "blue")
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy), color = "pink")
ggplot( data = mpg ) +
geom_point( mapping = aes(x = displ, y = hwy), color = "blue4")
ggplot2 :: mpg
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,stroke = class)) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ)) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
# ploting displ[engine size] vs hwy[ fuel efficiency]
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 5)) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
# ploting displ[engine size] vs hwy[ fuel efficiency]
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6)) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class)) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6)) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6), size = 4) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
# ploting displ[engine size] vs hwy[ fuel efficiency]
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6 && hwy < 30), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6 || hwy < 30), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6 || hwy > 30), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6 && hwy > 30), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = displ < 6 ), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = f1 ), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
# ploting displ[engine size] vs hwy[ fuel efficiency]
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = fl ), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = drv ), size = 3) +
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color =  ), size = 3) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = className() ), size = 3) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = className() ), size = 3) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 3) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_wrap( ~ class, nrow = 3 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_wrap( ~ class, nrow = 4 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( y = displ, x = hwy,color = class ), size = 2) +
facet_wrap( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_wrap( ~ class, nrow = 2 )
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_grid( ~ class, nrow = 2 )
geom_smooth( mapping = aes( x = displ, y = hwy ))
ggplot( data = mpg) +
geom_point( mapping = aes( x = drv, y = cyl,color = class ), size = 2) +
ggplot( data = mpg) +
geom_point( mapping = aes( x = drv, y = cyl,color = class ), size = 2)
ggplot( data = mpg) +
geom_point( mapping = aes( x = drv, y = cyl,color = class ), size = 2)
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_grid( ~ class, nrow = 2, margin = TRUE )
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_grid( ~ class, margin = TRUE )
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_grid( ~ class, margin = "am" )
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_grid( ~ class, margin = "vs" )
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
facet_grid( ~ class, nrow = 2, margin = "am" )
ggplot( data = mpg) +
geom_point( mapping = aes( x = displ, y = hwy,color = class ), size = 2) +
geom_smooth( mapping = aes( x = displ, y = hwy ), se = FALSE)
library(tidyverse)
ggplot( data = diamonds) +
stats_summary(
mapping = aes( x=cut, y=depth ),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot( data = diamonds) +
stat_summary(
mapping = aes( x=cut, y=depth ),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot( data = diamonds, color = "blue4") +
stat_summary(
mapping = aes( x=cut, y=depth ),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
library(tidyverse)
ggplot( data = diamonds, color = "blue4") +
geom_col( mapping = aes( x=cut, y=depth)
q
ggplot( data = diamonds, color = "blue4") +
geom_col( mapping = aes( x=cut, y=depth)
)
ggplot( data = diamonds, color = "blue4") +
geom_bar( mapping = aes( x=cut, y=depth)
q
ggplot( data = diamonds, color = "blue4") +
geom_bar( mapping = aes( x=cut, y=depth))
ggplot( data = diamonds, color = "blue4") +
geom_bar( mapping = aes( x=cut, y=depth), stat = "identity")
ggplot( data = diamonds, color = "blue4") +
geom_bar( mapping = aes( x=cut, color = cut))
ggplot( data = diamonds, color = "blue4") +
geom_bar( mapping = aes( x=cut, fill = cut))
ggplot( data = diamonds, color = "blue4") +
geom_bar( mapping = aes( x=cut, fill = clarity))
ggplot( data = diamonds,mapping = aes( x=cut, fill = clarity)) +
geom_bar( alpha = 1/5, position = "identity")
ggplot( data = diamonds,mapping = aes( x=cut, fill = NA)) +
geom_bar( alpha = 1/5, position = "identity")
ggplot( data = diamonds,mapping = aes( x=cut, color = "clarity")) +
geom_bar( fill = NA, position = "identity")
ggplot( data = diamonds,mapping = aes( x=cut, color = "clarity")) +
geom_bar( position = "identity")
ggplot( data = diamonds,mapping = aes( x=cut, color = "clarity")) +
geom_bar( position = "fill")
ggplot( data = diamonds,mapping = aes( x=cut, color = "clarity")) +
geom_bar( position = "dodge")
ggplot( data = diamonds, mapping = aes( x=cut, fill = clarity )) +
geom_bar( position = "dodge")
library(tidyverse)
# Importing dataset
View(nycflights13)
ggplot( data = diamonds ) +
geom_bin2d( mapping = aes( x = carat, y= price ))
ggplot( data = diamonds ) +
geom_bin2d( mapping = aes( x = carat, y= price ))
vignette("tibble")
tibble( ~x,~y,~z
#________
'a',2,2
'b',3,3
)
tibble( ~x,~y,~z
#________
'a',2,2
'b',3,3?)
tibble( ~x,~y,~z
#________
'a',2,2
'b',3,3)
tibble( ~x,~y,~z
#________
'a',2,2
'b',3,3)
tibble( ~x,~y,~z,
#________
'a',2,2,
'b',3,3)
tibble( ~x,~y,~z,
#________
'a',2,2,
'b',3,3
)
tibble( ~x,~y,~z,
#________
'a',2,2,
'b',3,3
)
tribble( ~x,~y,~z,
#________
'a',2,2,
'b',3,3
)
tribble( ~x,~y,~z,
#________
'a',2,2,
'b',3,3
)
tribble( ~x,~y,~z,
#________
'a',1:10,2,
'b',3,3
)
tribble( ~x,~y,~z,
#________
'a',1:10,2,
'b',3,3
)
load("C:/Users/RISHABH/Desktop/BIG MArt/.RData")
install.packages(c("backports", "callr", "class", "htmlTable", "httpuv", "httr", "jsonlite", "knitr", "markdown", "pillar", "ps", "quantreg", "readr", "readxl", "slam", "tibble", "tm"))
install.packages(c("class", "codetools"), lib="C:/Program Files/R/R-3.5.1/library")
install.packages(c("backports", "callr", "class", "htmlTable", "httpuv", "httr", "jsonlite", "knitr", "markdown", "pillar", "ps", "quantreg", "readr", "readxl", "slam", "tibble", "tm"))
install.packages(c("backports", "callr", "class", "htmlTable", "httpuv", "httr", "jsonlite", "knitr", "markdown", "pillar", "ps", "quantreg", "readr", "readxl", "slam", "tibble", "tm"))
install.packages(c("backports", "callr", "class", "htmlTable", "httpuv", "httr", "jsonlite", "knitr", "markdown", "pillar", "ps", "quantreg", "readr", "readxl", "slam", "tibble", "tm"))
install.packages(c("backports", "callr", "class", "htmlTable", "httpuv", "httr", "jsonlite", "knitr", "markdown", "pillar", "ps", "quantreg", "readr", "readxl", "slam", "tibble", "tm"))
install.packages("parallelMap")
1+1+1+1+1+
3
sum(4+4+4+4+6)
sum(1,1,1,1)
prod(1,2,3)
apple = 89
is.integer(2)
is.integer(2L)
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
e
Inf
data <- list(x = 1:5, y = 6:10, z = 11:15)
lapply(data, FUN = median)
data$x
movies <- c("SPYDERMAN","BATMAN","VERTIGO","CHINATOWN")
movies_lower <-lapply(movies, tolower)
movies_lower
mapply(rep, 1:4, 4:1)
mapply(sum, 1:5,1:5)
mapply(sum, 1:5,1:6)
mapply(sum, 1:5, 1:10,1:20)
mapply(rep, times = 1:4, x = 4:1)
mapply(sum, 1:5, 1:10)
mapply(sum, 1:5, 1:15)
mapply(sum, times = 1:5, x = 1:15)
setwd("~/GitHub/Mini/BIG Mart")
library(tidyverse)
library(readr)
Train <- read_csv("Train.csv")
Test <- read_csv("Test.csv")
summary(Train)
View(Train)
p61 <- ggplot(Train, aes(Train$Item_Weight,Train$Item_Outlet_Sales))+
geom_point(colour = 'red4',alpha = 0.1)+
geom_smooth(method =lm,span =0.8);p61
p <- ggplot(mtcars, aes(wt, mpg))
p + geom_point()
p + geom_point(aes(shape = factor(cyl)))
p + geom_point(aes(colour = factor(cyl)))
p61 <- ggplot(Train, aes(Train$Item_Weight,Train$Item_Outlet_Sales))+
geom_point(colour = 'red4') + geom_smooth(method =lm,span =0.8)
p62 <- ggplot(Train, aes(Train$Item_Weight,Train$Item_Outlet_Sales))+
geom_point(colour = 'purple4') + geom_smooth(method =lm,span =0.8)
p63 <- ggplot(Train, aes(Train$Item_Weight,Train$Item_Outlet_Sales))+
geom_point(colour = 'navy') + geom_smooth(method =lm,span =0.8)
p64 <- ggplot(Train, aes(Train$Item_Weight,Train$Item_Outlet_Sales))+
geom_point(colour = 'green4') + geom_smooth(method =lm,span =0.8)
grid.arrange(
p61,p62,p63,p64, nrow = 2,
top = "Item Weight v/s Item Outlet Sales")
library(gridExtra)
p61 <- ggplot(Train, aes(Train$Item_Weight,Train$Item_Outlet_Sales))+
geom_point(colour = 'red4') + geom_smooth(method =lm,span =0.8)
p62 <- ggplot(Train, aes(Train$Item_Weight,Train$Item_Outlet_Sales))+
geom_point(colour = 'purple4') + geom_smooth(method =lm,span =0.8)
p63 <- ggplot(Train, aes(Train$Item_Weight,Train$Item_Outlet_Sales))+
geom_point(colour = 'navy') + geom_smooth(method =lm,span =0.8)
p64 <- ggplot(Train, aes(Train$Item_Weight,Train$Item_Outlet_Sales))+
geom_point(colour = 'green4') + geom_smooth(method =lm,span =0.8)
grid.arrange(
p61,p62,p63,p64, nrow = 2,
top = "Item Weight v/s Item Outlet Sales")
p61 <- ggplot(Train, aes(Train$Item_Weight,Train$Item_Outlet_Sales))+
geom_point(colour = 'red4') + geom_smooth(method =lm,span =0.8)
p62 <- ggplot(Train, aes(Train$Item_Visibility,Train$Item_Outlet_Sales))+
geom_point(colour = 'purple4') + geom_smooth(method =lm,span =0.8)
p63 <- ggplot(Train, aes(Train$Item_MRP,Train$Item_Outlet_Sales))+
geom_point(colour = 'navy') + geom_smooth(method =lm,span =0.8)
p64 <- ggplot(Train, aes(Train$Item_MRP,Train$Item_Outlet_Sales))+
geom_point(colour = 'green4') + geom_smooth(method =lm,span =0.8)
grid.arrange(
p61,p62,p63,p64, nrow = 2,
top = "Continuous Vs Target Variable")
p64 <- ggplot(Train, aes(Train$Outlet_Establishment_Year,Train$Item_Outlet_Sales))+
geom_point(colour = 'green4') + geom_smooth(method =lm,span =0.8)
grid.arrange(
p61,p62,p63,p64, nrow = 2,
top = "Continuous Vs Target Variable")
p71 <- ggplot( Train, aes(Train$Item_Fat_Content,Train$Item_Outlet_Sales)) +
geom_violin(scale = "area");p71
p71 <- ggplot( Train, aes(Train$Item_Fat_Content,Train$Item_Outlet_Sales, fill = Train$Item_Fat_Content)) +
geom_violin(scale = "area");p71
p71 <- ggplot( Train, aes(Train$Item_Fat_Content,Train$Item_Outlet_Sales, fill = Train$Item_Fat_Content)) +
#geom_violin(scale = "area");p71
geom_bar();p71
p71 <- ggplot( Train, aes(Train$Item_Fat_Content,Train$Item_Outlet_Sales, fill = Train$Item_Fat_Content)) +
#geom_violin(scale = "area");p71
geom_bar(stat = "identity");p71
p11 <- ggplot(Train, aes(Item_MRP, fill = Outlet_Type)) +
geom_area(stat = "bin" , na.rm = TRUE)
p12 <- ggplot(Train, aes(Item_MRP, fill = Outlet_Location_Type)) +
geom_area(stat = "bin" , na.rm = TRUE)
p13 <- ggplot(Train, aes(Item_MRP, fill = Outlet_Size)) +
geom_area(stat = "bin" , na.rm = TRUE)
p14 <- ggplot(Train, aes(Item_MRP, fill = Item_Fat_Content)) +
geom_area(stat = "bin" , na.rm = TRUE)
grid.arrange(
p11,p12,p13,p14, nrow = 2,
top = "Price Effects")
p51 <- ggplot(Train, aes(Outlet_Type)) +
geom_bar(fill = "springgreen4", na.rm = TRUE)
p52 <- ggplot(Train, aes(Outlet_Location_Type )) +
geom_bar(fill = "purple4", na.rm = TRUE)
p53 <- ggplot(Train, aes(Outlet_Size)) +
geom_bar(fill = "darkorange4", na.rm = TRUE)
p54 <- ggplot(Train, aes(Item_Fat_Content)) +
geom_bar(fill = "deepskyblue4", na.rm = TRUE)
grid.arrange(
p51,p52,p53,p54, nrow = 2,
top = "Spread Check")
Train2 = na.omit(Train)
ggcorrplot(cor(Train2[ ,-c(1,3,5,7,9,10,11)]),method = 'circle',hc.order = T,
type ='lower',colors = c('red','azure','cadetblue1'),
ggtheme = ggplot2::theme_grey())
library(ggcorrplot)
Train2 = na.omit(Train)
ggcorrplot(cor(Train2[ ,-c(1,3,5,7,9,10,11)]),method = 'circle',hc.order = T,
type ='lower',colors = c('red','azure','cadetblue1'),
ggtheme = ggplot2::theme_grey())
var(Train2[ ,-c(1,3,5,7,9,10,11)])
table(var(Train2[ ,-c(1,3,5,7,9,10,11)]))
data.frame(var(Train2[ ,-c(1,3,5,7,9,10,11)]))
d <- as.data.frame(var(Train2[ ,-c(1,3,5,7,9,10,11)]))
View(d)
d <- as.data.frame(cor(Train2[ ,-c(1,3,5,7,9,10,11)],method = "spearman"))
View(d)
ggcorrplot(cor(Train2[ ,-c(1,3,5,7,9,10,11)],,method = "spearman"),method = 'circle',hc.order = T,
type ='lower',colors = c('red','azure','cadetblue1'),
ggtheme = ggplot2::theme_grey())
ggcorrplot(cor(Train2[ ,-c(1,3,5,7,9,10,11)],,method = "spearman"),method = 'circle',hc.order = T,
type ='lower',colors = c('red4','azure','cadetblue1'),
ggtheme = ggplot2::theme_grey())
ggcorrplot(cor(Train2[ ,-c(1,3,5,7,9,10,11)],,method = "spearman"),method = 'circle',hc.order = T,
type ='lower',colors = c('red4','yellow','cadetblue1'),
ggtheme = ggplot2::theme_grey())
ggcorrplot(cor(Train2[ ,-c(1,3,5,7,9,10,11)],,method = "spearman"),method = 'circle',hc.order = T,
type ='lower',colors = c('red4','azure','yellow'),
ggtheme = ggplot2::theme_grey())
ggcorrplot(cor(Train2[ ,-c(1,3,5,7,9,10,11)]),method = 'circle',hc.order = T,
type ='lower',colors = c('red4','azure','yellow'),
ggtheme = ggplot2::theme_grey())
ggcorrplot(cor(Train2[ ,-c(1,3,5,7,9,10,11)],method = "spearman"),method = 'circle',hc.order = T,
type ='lower',colors = c('red4','azure','yellow'),
ggtheme = ggplot2::theme_grey())
